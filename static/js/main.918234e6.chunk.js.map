{"version":3,"sources":["components/card/card.component.jsx","logo.svg","components/cards-list/cards-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","elem","id","alt","name","email","CardsList","monsters","map","index","SearcBox","placeholder","handleChange","onChange","type","App","state","searchField","fetch","then","response","json","user","setState","this","filteredMonsters","filter","monster","toLowerCase","includes","e","setTimeout","target","value","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qTAIaA,GCJE,I,MDIK,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACE,qBACEC,IAAG,+BAA0BF,EAAMG,KAAKC,GAArC,0BACHC,IAAI,UAEN,6BAAKL,EAAMG,KAAKG,OAChB,4BAAIN,EAAMG,KAAKI,aEPNC,G,MAAY,SAACR,GACxB,OACE,qBAAKC,UAAU,YAAf,SACGD,EAAMS,SAASC,KAAI,SAACP,EAAMQ,GACzB,OAAO,cAAC,EAAD,CAAkBR,KAAMA,GAAbQ,UCKXC,G,MAVE,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC/B,OACE,uBACEC,SAAUD,EACVE,KAAK,OACLf,UAAU,SACVY,YAAaA,MC0CJI,G,wDA5Cb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXT,SAAU,GACVU,YAAa,IAJH,E,gEAOO,IAAD,OAClBC,MAAM,8CAA8CC,MAAK,SAACC,GAAD,OACvDA,EAASC,OAAOF,MAAK,SAACG,GAAD,OAAU,EAAKC,SAAS,CAAEhB,SAAUe,Y,+BAGnD,IAAD,SAa2BE,KAAKR,MAA/BT,EAbD,EAaCA,SAAUU,EAbX,EAaWA,YACZQ,EAAmBlB,EAASmB,QAAO,SAACC,GACxC,OAAOA,EAAQvB,KAAKwB,cAAcC,SAASZ,EAAYW,kBAEzD,OACE,sBAAK7B,UAAU,MAAf,UACE,8BACE,oDAEF,cAAC,EAAD,CACEY,YAAY,kBACZC,aAjBe,SAACkB,GACpBC,YAAW,WAET,OADA,EAAKR,SAAS,CAAEN,YAAaa,EAAEE,OAAOC,QAC/B,EAAKjB,MAAMC,cACjB,QAeD,cAAC,EAAD,CAAWV,SAAUkB,IACrB,8BAAMD,KAAKR,MAAMC,qB,GAxCPiB,IAAMC,YCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.918234e6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./card.component.css\";\r\nimport { CardsList } from \"../cards-list/cards-list.component.jsx\";\r\n\r\nexport const Card = (props) => (\r\n  <div className=\"card-container\">\r\n    <img\r\n      src={`https://robohash.org/${props.elem.id}?set=set2&size=180x180`}\r\n      alt=\"image\"\r\n    />\r\n    <h1>{props.elem.name}</h1>\r\n    <p>{props.elem.email}</p>\r\n  </div>\r\n);\r\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from \"react\";\r\nimport { Card } from \"../card/card.component.jsx\";\r\nimport \"./cards-list.component.css\";\r\n\r\nexport const CardsList = (props) => {\r\n  return (\r\n    <div className=\"card-list\">\r\n      {props.monsters.map((elem, index) => {\r\n        return <Card key={index} elem={elem}></Card>;\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./search-box.component.css\";\r\n\r\nconst SearcBox = ({ placeholder, handleChange }) => {\r\n  return (\r\n    <input\r\n      onChange={handleChange}\r\n      type=\"text\"\r\n      className=\"search\"\r\n      placeholder={placeholder}\r\n    ></input>\r\n  );\r\n};\r\nexport default SearcBox;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport { CardsList } from \"./components/cards-list/cards-list.component.jsx\";\nimport SearcBox from \"./components/search-box/search-box.component.jsx\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\").then((response) =>\n      response.json().then((user) => this.setState({ monsters: user }))\n    );\n  }\n  render() {\n    // function addArr(param) {\n    //   param.push({ id: 4, name: \"Ghost\" });\n    //   return param;\n    // }\n    // addArr(this.state.monsters);\n\n    const filterSearch = (e) => {\n      setTimeout(() => {\n        this.setState({ searchField: e.target.value });\n        return this.state.searchField;\n      }, 2000);\n    };\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase());\n    });\n    return (\n      <div className=\"App\">\n        <div>\n          <h1>Monsters Rolodex</h1>\n        </div>\n        <SearcBox\n          placeholder=\"search monsters\"\n          handleChange={filterSearch}\n        ></SearcBox>\n        <CardsList monsters={filteredMonsters} />\n        <div>{this.state.searchField}</div>\n      </div>\n    );\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}